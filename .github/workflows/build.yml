name: Haskell CI

on:
  pull_request:
  push:
    branches:
      - 'bors/*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: ${{ matrix.os == 'windows-latest' && 'msys2 {0}' || 'bash' }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7"]
        os: [ubuntu-latest, windows-latest]

    env:
      # current ref from: 27.02.2022
      SECP256K1_REF: ac83be33d0956faf6b7f61a60ab524ef7d6a473a

    steps:
    - name: "WIN: Setup MSYS2 and libraries"
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          autoconf-wrapper
          autoconf
          automake
          libtool
          make
          git
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-libsodium
          mingw-w64-x86_64-jq

    - name: "WIN: Setup Haskell"
      id: win-setup-haskell
      if: runner.os == 'Windows'
      run: |
        # see https://gitlab.haskell.org/haskell/ghcup-hs/-/blob/master/scripts/bootstrap/bootstrap-haskell
        curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | \
          BOOTSTRAP_HASKELL_NONINTERACTIVE=1 \
          BOOTSTRAP_HASKELL_ADJUST_CABAL_CONFIG=1 \
          BOOTSTRAP_HASKELL_ADJUST_BASHRC=1 \
          BOOTSTRAP_HASKELL_GHC_VERSION="${{ matrix.ghc }}" \
          BOOTSTRAP_HASKELL_CABAL_VERSION="3.6.2.0" \
          sh

        # MSYS2 doesn't inherit $GITHUB_PATH so this is needed
        cat <(echo "source /c/ghcup/env") ~/.bashrc > ~/.bashrc.new
        mv ~/.bashrc.new ~/.bashrc

        source ~/.bashrc

        ghc --version
        cabal --version

    - name: build old-time and network
      run: |
        cabal update
        cabal install --lib old-time-1.1.0.3 -j1 -v3
        cabal install --lib network-3.1.2.7 -j1 -v3

    - name: Diagnostics
      if: always()
      run: |
        find 'C:/cabal/store/ghc-8.10.7/old-time-1.1.0.3-44a2c565592e84ec665bc760a4c1a4c07fd31787'

    - uses: actions/checkout@v3

    - name: Update Hackage and CHaP
      run: cabal update

    - name: Record dependencies
      id: record-deps
      run: |
        cabal build all --dry-run
        cat dist-newstyle/cache/plan.json | jq -r '."install-plan"[].id' | sort | uniq > dependencies.txt
        echo "weeknum=$(/bin/date -u "+%W")" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: "Cache `cabal store`"
      with:
        path: ${{ runner.os == 'Windows' && steps.win-setup-haskell.outputs.cabal-store || steps.setup-haskell.outputs.cabal-store }}
        key: cache-dependencies-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
        restore-keys: cache-dependencies-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}

    - uses: actions/cache@v3
      name: "Cache `dist-newstyle`"
      with:
        path: |
          dist-newstyle
          !dist-newstyle/**/.git
        key: cache-dist-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-${{ steps.record-deps.outputs.weeknum }}
        restore-keys: cache-dist-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}

    - name: Build dependencies
      run: |
        which pkg-config
        cabal build --only-dependencies all -j

    - name: Build projects [build]
      run: cabal build all

    # Test network packages

    - name: ntp-client [test]
      run: cabal run ntp-client:test

    - name: network-mux [test]
      run: cabal run network-mux:test

    - name: ourobors-network-testing [test]
      run: cabal run ouroboros-network-testing:test

    # issue: #1818
    - name: ourobors-network-framework [test]
      run: cabal run ouroboros-network-framework:test -- -p '$0 != "typed-protocols.Socket.socket send receive IPv4"'

    - name: ouroboros-network [test]
      run: cabal run ouroboros-network:test

    # Consensus tests take too long on GitHub's Azure machines
