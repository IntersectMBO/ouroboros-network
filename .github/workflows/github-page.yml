name: "Haddock documentation"

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  haddocks:
    name: "Haddocks"

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.4"]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Select build directory
      run: |
        if [ "$OS" == Windows_NT ]; then
          CABAL_BUILDDIR="D:\\a\\_temp\\dist"
        else
          CABAL_BUILDDIR="dist-newstyle"
        fi

        echo "CABAL_BUILDDIR=$CABAL_BUILDDIR"
        echo "CABAL_BUILDDIR=$CABAL_BUILDDIR" >> $GITHUB_ENV

    - name: Install pkgconfiglite
      if: matrix.os == 'windows-latest'
      run: choco install -y pkgconfiglite

    - name: Install libsodium
      if: matrix.os == 'windows-latest'
      run: |
        curl -Ls \
          --connect-timeout 5 \
          --max-time 10 \
          --retry 5 \
          --retry-delay 0 \
          --retry-max-time 40 \
          https://download.libsodium.org/libsodium/releases/libsodium-1.0.18-mingw.tar.gz -o libsodium-1.0.18-mingw.tar.gz
        tar zxvf libsodium-1.0.18-mingw.tar.gz

        sed -i "s|/d/a/1/s/|D:/a/cardano-node/cardano-node/|g" libsodium-win64/lib/pkgconfig/libsodium.pc

        export PKG_CONFIG_PATH="$(readlink -f libsodium-win64/lib/pkgconfig)"
        echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV

        export LIBSODIUM_PATH="$(readlink -f libsodium-win64/bin | sed 's|^/d|D:|g' | tr / '\\')"
        echo "LIBSODIUM_PATH=$LIBSODIUM_PATH"
        echo "$LIBSODIUM_PATH" >> $GITHUB_PATH

    - name: Configure to use libsodium
      run: |
        cat >> cabal.project <<EOF
        package cardano-crypto-praos
          flags: -external-libsodium-vrf
        EOF

    - name: Install Haskell
      uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.4.0.0'

    - name: Install build environment
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libsodium23 libsodium-dev
        sudo apt-get -y install libsystemd0 libsystemd-dev
        sudo apt-get -y remove --purge software-properties-common
        sudo apt-get -y autoremove

    - name: Set up temp directory
      run: |
        echo 'TMPDIR=${{ runner.temp }}'  >> $GITHUB_ENV
        echo 'TMP=${{ runner.temp }}'     >> $GITHUB_ENV

    - uses: actions/cache@v2
      name: Cache cabal store
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-haddock-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-${{ github.sha }}
        restore-keys: cache-haddock-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-

    - name: Update Hackage index
      run: cabal v2-update

    - name: Checkout ouroboros-network repository
      uses: actions/checkout@v2

    - name: Build dependencies
      run: cabal --builddir="$CABAL_BUILDDIR" configure --enable-tests

    - name: Use cabal.project.local.github-pages
      run: |
        cat ./cabal.project.local.github-pages >> ./cabal.project.local
        cat ./cabal.project.local

    - name: build Haddock documentation ðŸ”§
      run: |
        mkdir ./haddocks
        ./scripts/haddocs.sh ./haddocks

    - name: deploy to gh-pages ðŸš€
      run: |
        git config --local user.email "marcin.szamotulski@iohk.io"
        git config --local user.name ${{ github.actor }}
        git fetch origin gh-pages:gh-pages
        git checkout gh-pages
        cp -r ./haddocks/* ./
        rm -rf haddocks
        git add -A
        git commit -m "Deployed haddocks" || true
        git push https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git HEAD:gh-pages
