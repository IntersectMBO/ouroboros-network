name: Haddocks

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

jobs:
  haddocks:
    name: Haddocks

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.10"]
        os: [ubuntu-latest]

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout ouroboros-network repository
      uses: actions/checkout@v4

      # we need nix to later build the spec documents
    - name: Install Nix
      uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          substituters = https://cache.nixos.org https://cache.iog.io
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          experimental-features = nix-command flakes

    - name: Install Haskell
      uses: haskell-actions/setup@v2
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: 'head'

    - uses: actions/cache@v4
      name: Cache cabal store
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-haddock-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-${{ github.sha }}
        restore-keys: cache-haddock-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-

    - name: Update Hackage index
      run: cabal update

    - name: Build plan
      run: cabal build --dry-run all

    - name: Build documents
      run: |
        cabal haddock-project --prologue=./scripts/prologue --hackage all

    - name: Copy diagram
      run: |
        cp ./scripts/packages-network.svg ./haddocks

    - name: Build documents
      run: |
        nix build .\#network-docs
        for pdf in $(ls result/*.pdf); do
          PDF_DIR=haddocks/pdfs/$(basename $pdf .pdf)
          mkdir -p $PDF_DIR
          echo '<!DOCTYPE html>' > $PDF_DIR/index.html
          echo -n '<!DOCTYPE html><meta http-equiv="refresh" content="0; URL=' >> $PDF_DIR/index.html
          echo -n $(basename $pdf) >> $PDF_DIR/index.html
          echo '">' >> $PDF_DIR/index.html
          cp $pdf $PDF_DIR/
        done

    - name: Upload artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./haddocks

    - name: Deploy ðŸš€
      id: deployment
      uses: actions/deploy-pages@v4
