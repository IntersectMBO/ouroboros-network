name:                typed-protocols
version:             0.1.0.0
synopsis:            A framework for strongly typed protocols
-- description:         
license:             MIT
license-file:        LICENSE
author:              Alexander Vieth, Duncan Coutts, Marcin Szamotulski
maintainer:          alex@well-typed.com, duncan@well-typed.com, marcin.szamotulski@iohk.io
copyright:           2018-2019 IOHK
category:            Control
build-type:          Simple
extra-source-files:  ChangeLog.md, README.md
cabal-version:       >=1.10

library
  exposed-modules:   Network.TypedProtocol.Core
                   , Network.TypedProtocol.Pipelined
                   , Network.TypedProtocol.Channel
                   , Network.TypedProtocol.Codec
                   , Network.TypedProtocol.Driver
                   , Network.TypedProtocol.Proofs

                   , Network.TypedProtocol.PingPong.Type
                   , Network.TypedProtocol.PingPong.Client
                   , Network.TypedProtocol.PingPong.Server
                   , Network.TypedProtocol.PingPong.Direct
                   , Network.TypedProtocol.PingPong.Codec
                   , Network.TypedProtocol.PingPong.Examples

                   , Network.TypedProtocol.ReqResp.Type
                   , Network.TypedProtocol.ReqResp.Client
                   , Network.TypedProtocol.ReqResp.Server
                   , Network.TypedProtocol.ReqResp.Direct
                   , Network.TypedProtocol.ReqResp.Codec
                   , Network.TypedProtocol.ReqResp.Examples

  other-extensions:  GADTs
                   , RankNTypes
                   , PolyKinds
                   , DataKinds
                   , ScopedTypeVariables
                   , TypeFamilies
                   , TypeOperators
                   , BangPatterns
  build-depends:     base,
                     io-sim-classes,
                     -- TODO: do we want these here or move elsewhere?
                     bytestring,
                     process,
                     cborg

  hs-source-dirs:    src
  default-language:  Haskell2010
  ghc-options:       -Wall
                     -Wno-unticked-promoted-constructors

test-suite tests
  type:              exitcode-stdio-1.0
  main-is:           Main.hs
  hs-source-dirs:    test
  other-modules:     Test.Network.TypedProtocol.PingPong
  build-depends:     base
                   , async
                   , bytestring
                   , free
                   , io-sim-classes
                   , io-sim
                   , QuickCheck
                   , tasty
                   , tasty-quickcheck
                   , typed-protocols
  default-language:  Haskell2010
  ghc-options:      -rtsopts
