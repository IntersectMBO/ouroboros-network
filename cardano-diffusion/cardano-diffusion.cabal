cabal-version: 3.4
name: cardano-diffusion
version: 0.1.0.0
synopsis: A networking layer for the cardano blockchain protocol
description: A networking layer for the cardano blockchain protocol.
license: Apache-2.0
license-file: LICENSE
author: Alexander Vieth, Marcin Szamotulski, Duncan Coutts
maintainer: marcin.szamotulski@iohk.io
copyright: 2019-2023 Input Output Global Inc (IOG), 2023-2025 Intersect
license-files:
  LICENSE
  NOTICE

category: Network
build-type: Simple
extra-doc-files: CHANGELOG.md

flag asserts
  description: Enable assertions
  manual: False
  default: False

flag cddl
  description: Enable CDDL based tests of the CBOR encoding
  manual: True
  -- These tests need the cddl and the cbor-diag Ruby-package
  default: True

common ghc-options
  default-language: Haskell2010
  default-extensions: ImportQualifiedPost
  ghc-options:
    -Wall
    -Wno-unticked-promoted-constructors
    -Wcompat
    -Wincomplete-uni-patterns
    -Wincomplete-record-updates
    -Wpartial-fields
    -Widentities
    -Wredundant-constraints
    -Wunused-packages

  if flag(asserts)
    ghc-options: -fno-ignore-asserts

-- in tests librararies redundant constraints are sometimes useful (e.g.
-- by default truned off debug tracing might require extra constraints like
-- `Show` or `MonadSay`).
common ghc-options-tests
  import: ghc-options
  ghc-options: -Wno-redundant-constraints

library api
  import: ghc-options
  visibility: public
  hs-source-dirs: api/lib
  exposed-modules:
    Cardano.Network.ConsensusMode
    Cardano.Network.FetchMode
    Cardano.Network.LedgerStateJudgement
    Cardano.Network.NodeToClient.Version
    Cardano.Network.NodeToNode.Version
    Cardano.Network.PeerSelection.Bootstrap
    Cardano.Network.PeerSelection.LocalRootPeers
    Cardano.Network.PeerSelection.PeerTrustable

  build-depends:
    aeson,
    base >=4.14 && <4.22,
    cborg >=0.2.1 && <0.3,
    deepseq,
    nothunks,
    ouroboros-network:api,
    text >=1.2 && <2.2,

test-suite api-tests
  import: ghc-options
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: api/tests
  other-modules:
    Test.Cardano.Network.NodeToClient.Version
    Test.Cardano.Network.NodeToNode.Version
    Test.Cardano.Network.Version

  build-depends:
    QuickCheck,
    base >=4.14 && <4.22,
    cardano-diffusion:api,
    ouroboros-network:api,
    tasty,
    tasty-hunit,
    tasty-quickcheck,
    with-utf8,

  ghc-options:
    -rtsopts

library
  import: ghc-options
  hs-source-dirs: lib
  exposed-modules:
    Cardano.Network.Diffusion
    Cardano.Network.Diffusion.Configuration
    Cardano.Network.Diffusion.Handlers
    Cardano.Network.Diffusion.Policies
    Cardano.Network.Diffusion.Topology
    Cardano.Network.Diffusion.Types
    Cardano.Network.LedgerPeerConsensusInterface
    Cardano.Network.NodeToClient
    Cardano.Network.NodeToNode
    Cardano.Network.PeerSelection
    Cardano.Network.PeerSelection.Churn
    Cardano.Network.PeerSelection.ExtraRootPeers
    Cardano.Network.PeerSelection.Governor.Monitor
    Cardano.Network.PeerSelection.Governor.PeerSelectionActions
    Cardano.Network.PeerSelection.Governor.PeerSelectionState
    Cardano.Network.PeerSelection.Governor.Types
    Cardano.Network.PeerSelection.PeerSelectionActions
    Cardano.Network.PeerSelection.PublicRootPeers
    Cardano.Network.PeerSelection.State.LocalRootPeers

  default-language: Haskell2010
  default-extensions: ImportQualifiedPost
  other-extensions:
    BangPatterns
    DataKinds
    EmptyCase
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTSyntax
    GADTs
    GeneralizedNewtypeDeriving
    MultiParamTypeClasses
    NamedFieldPuns
    OverloadedStrings
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeInType

  build-depends:
    aeson,
    base >=4.14 && <4.22,
    bytestring,
    cardano-diffusion:{api, protocols},
    containers,
    contra-tracer,
    dns,
    io-classes:{io-classes, si-timers, strict-stm} ^>=1.8,
    monoidal-synchronisation,
    network ^>=3.2.7,
    network-mux,
    ouroboros-network:{ouroboros-network, api, framework, protocols},
    random,
    typed-protocols:{typed-protocols, stateful} ^>=1.1,

  if !os(windows)
    build-depends:
      unix

library orphan-instances
  import: ghc-options
  visibility: public
  hs-source-dirs: orphan-instances
  exposed-modules:
    Cardano.Network.OrphanInstances

  reexported-modules:
  other-extensions:
    BangPatterns
    DataKinds
    EmptyCase
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTSyntax
    GADTs
    GeneralizedNewtypeDeriving
    MultiParamTypeClasses
    NamedFieldPuns
    OverloadedStrings
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeInType

  build-depends:
    aeson,
    base >=4.14 && <4.22,
    cardano-diffusion:{cardano-diffusion, api},
    containers,
    ouroboros-network:{ouroboros-network, api, orphan-instances},

executable demo-chain-sync
  import: ghc-options
  hs-source-dirs: demo
  main-is: chain-sync.hs
  build-depends:
    async,
    base >=4.14 && <4.22,
    bytestring,
    cardano-diffusion,
    containers,
    contra-tracer,
    directory,
    infinite-list,
    io-classes:{si-timers, strict-stm},
    network-mux,
    optparse-applicative,
    ouroboros-network:{ouroboros-network, api, api-tests-lib, framework, protocols},
    random,
    serialise,
    typed-protocols,

  ghc-options:
    -threaded
    -rtsopts

library protocols
  import: ghc-options
  visibility: public
  hs-source-dirs: protocols/lib
  exposed-modules:
    Cardano.Network.Protocol.Handshake.Codec
    Cardano.Network.Protocol.LocalStateQuery.Codec
    Cardano.Network.Protocol.LocalTxMonitor.Codec
    Cardano.Network.Protocol.PeerSharing.Codec

  reexported-modules:
    Ouroboros.Network.Protocol.BlockFetch.Client as Cardano.Network.Protocol.BlockFetch.Client,
    Ouroboros.Network.Protocol.BlockFetch.Codec as Cardano.Network.Protocol.BlockFetch.Codec,
    Ouroboros.Network.Protocol.BlockFetch.Server as Cardano.Network.Protocol.BlockFetch.Server,
    Ouroboros.Network.Protocol.BlockFetch.Type as Cardano.Network.Protocol.BlockFetch.Type,
    Ouroboros.Network.Protocol.ChainSync.Client as Cardano.Network.Protocol.ChainSync.Client,
    Ouroboros.Network.Protocol.ChainSync.ClientPipelined as Cardano.Network.Protocol.ChainSync.ClientPipelined,
    Ouroboros.Network.Protocol.ChainSync.Codec as Cardano.Network.Protocol.ChainSync.Codec,
    Ouroboros.Network.Protocol.ChainSync.PipelineDecision as Cardano.Network.Protocol.ChainSync.PipelineDecision,
    Ouroboros.Network.Protocol.ChainSync.Server as Cardano.Network.Protocol.ChainSync.Server,
    Ouroboros.Network.Protocol.ChainSync.Type as Cardano.Network.Protocol.ChainSync.Type,
    Ouroboros.Network.Protocol.Codec.Utils as Cardano.Network.Protocol.Codec.Utils,
    Ouroboros.Network.Protocol.Handshake.Client as Cardano.Network.Protocol.Handshake.Client,
    Ouroboros.Network.Protocol.Handshake.Server as Cardano.Network.Protocol.Handshake.Server,
    Ouroboros.Network.Protocol.Handshake.Type as Cardano.Network.Protocol.Handshake.Type,
    Ouroboros.Network.Protocol.KeepAlive.Client as Cardano.Network.Protocol.KeepAlive.Client,
    Ouroboros.Network.Protocol.KeepAlive.Codec as Cardano.Network.Protocol.KeepAlive.Codec,
    Ouroboros.Network.Protocol.KeepAlive.Server as Cardano.Network.Protocol.KeepAlive.Server,
    Ouroboros.Network.Protocol.KeepAlive.Type as Cardano.Network.Protocol.KeepAlive.Type,
    Ouroboros.Network.Protocol.LocalStateQuery.Client as Cardano.Network.Protocol.LocalStateQuery.Client,
    Ouroboros.Network.Protocol.LocalStateQuery.Server as Cardano.Network.Protocol.LocalStateQuery.Server,
    Ouroboros.Network.Protocol.LocalStateQuery.Type as Cardano.Network.Protocol.LocalStateQuery.Type,
    Ouroboros.Network.Protocol.LocalTxMonitor.Client as Cardano.Network.Protocol.LocalTxMonitor.Client,
    Ouroboros.Network.Protocol.LocalTxMonitor.Server as Cardano.Network.Protocol.LocalTxMonitor.Server,
    Ouroboros.Network.Protocol.LocalTxMonitor.Type as Cardano.Network.Protocol.LocalTxMonitor.Type,
    Ouroboros.Network.Protocol.LocalTxSubmission.Client as Cardano.Network.Protocol.LocalTxSubmission.Client,
    Ouroboros.Network.Protocol.LocalTxSubmission.Codec as Cardano.Network.Protocol.LocalTxSubmission.Codec,
    Ouroboros.Network.Protocol.LocalTxSubmission.Server as Cardano.Network.Protocol.LocalTxSubmission.Server,
    Ouroboros.Network.Protocol.LocalTxSubmission.Type as Cardano.Network.Protocol.LocalTxSubmission.Type,
    Ouroboros.Network.Protocol.PeerSharing.Client as Cardano.Network.Protocol.PeerSharing.Client,
    Ouroboros.Network.Protocol.PeerSharing.Server as Cardano.Network.Protocol.PeerSharing.Server,
    Ouroboros.Network.Protocol.PeerSharing.Type as Cardano.Network.Protocol.PeerSharing.Type,
    Ouroboros.Network.Protocol.TxSubmission2.Client as Cardano.Network.Protocol.TxSubmission2.Client,
    Ouroboros.Network.Protocol.TxSubmission2.Codec as Cardano.Network.Protocol.TxSubmission2.Codec,
    Ouroboros.Network.Protocol.TxSubmission2.Server as Cardano.Network.Protocol.TxSubmission2.Server,
    Ouroboros.Network.Protocol.TxSubmission2.Type as Cardano.Network.Protocol.TxSubmission2.Type,

  build-depends:
    base >=4.12 && <4.22,
    bytestring >=0.10 && <0.13,
    cardano-diffusion:api,
    cborg >=0.2.1 && <0.3,
    io-classes ^>=1.8.0.1,
    ouroboros-network:{api, framework, protocols},
    typed-protocols:{typed-protocols, stateful} ^>=1.1,

library protocols-tests-lib
  import: ghc-options
  visibility: public
  hs-source-dirs: protocols/tests-lib
  exposed-modules:
    Cardano.Network.Protocol.Handshake.Test

  reexported-modules:
    Ouroboros.Network.Protocol.BlockFetch.Codec.CDDL as Cardano.Network.Protocol.BlockFetch.Codec.CDDL,
    Ouroboros.Network.Protocol.BlockFetch.Direct as Cardano.Network.Protocol.BlockFetch.Direct,
    Ouroboros.Network.Protocol.BlockFetch.Examples as Cardano.Network.Protocol.BlockFetch.Examples,
    Ouroboros.Network.Protocol.BlockFetch.Test as Cardano.Network.Protocol.BlockFetch.Test,
    Ouroboros.Network.Protocol.ChainSync.Codec.CDDL as Cardano.Network.Protocol.ChainSync.Codec.CDDL,
    Ouroboros.Network.Protocol.ChainSync.Direct as Cardano.Network.Protocol.ChainSync.Direct,
    Ouroboros.Network.Protocol.ChainSync.DirectPipelined as Cardano.Network.Protocol.ChainSync.DirectPipelined,
    Ouroboros.Network.Protocol.ChainSync.Examples as Cardano.Network.Protocol.ChainSync.Examples,
    Ouroboros.Network.Protocol.ChainSync.ExamplesPipelined as Cardano.Network.Protocol.ChainSync.ExamplesPipelined,
    Ouroboros.Network.Protocol.ChainSync.Test as Cardano.Network.Protocol.ChainSync.Test,
    Ouroboros.Network.Protocol.Handshake.Direct as Cardano.Network.Protocol.Handshake.Direct,
    Ouroboros.Network.Protocol.KeepAlive.Direct as Cardano.Network.Protocol.KeepAlive.Direct,
    Ouroboros.Network.Protocol.KeepAlive.Examples as Cardano.Network.Protocol.KeepAlive.Examples,
    Ouroboros.Network.Protocol.KeepAlive.Test as Cardano.Network.Protocol.KeepAlive.Test,
    Ouroboros.Network.Protocol.LocalStateQuery.Codec.CDDL as Cardano.Network.Protocol.LocalStateQuery.Codec.CDDL,
    Ouroboros.Network.Protocol.LocalStateQuery.Direct as Cardano.Network.Protocol.LocalStateQuery.Direct,
    Ouroboros.Network.Protocol.LocalStateQuery.Examples as Cardano.Network.Protocol.LocalStateQuery.Examples,
    Ouroboros.Network.Protocol.LocalStateQuery.Test as Cardano.Network.Protocol.LocalStateQuery.Test,
    Ouroboros.Network.Protocol.LocalTxMonitor.Codec.CDDL as Cardano.Network.Protocol.LocalTxMonitor.Codec.CDDL,
    Ouroboros.Network.Protocol.LocalTxMonitor.Direct as Cardano.Network.Protocol.LocalTxMonitor.Direct,
    Ouroboros.Network.Protocol.LocalTxMonitor.Examples as Cardano.Network.Protocol.LocalTxMonitor.Examples,
    Ouroboros.Network.Protocol.LocalTxMonitor.Test as Cardano.Network.Protocol.LocalTxMonitor.Test,
    Ouroboros.Network.Protocol.LocalTxSubmission.Codec.CDDL as Cardano.Network.Protocol.LocalTxSubmission.Codec.CDDL,
    Ouroboros.Network.Protocol.LocalTxSubmission.Direct as Cardano.Network.Protocol.LocalTxSubmission.Direct,
    Ouroboros.Network.Protocol.LocalTxSubmission.Examples as Cardano.Network.Protocol.LocalTxSubmission.Examples,
    Ouroboros.Network.Protocol.LocalTxSubmission.Test as Cardano.Network.Protocol.LocalTxSubmission.Test,
    Ouroboros.Network.Protocol.PeerSharing.Direct as Cardano.Network.Protocol.PeerSharing.Direct,
    Ouroboros.Network.Protocol.PeerSharing.Examples as Cardano.Network.Protocol.PeerSharing.Examples,
    Ouroboros.Network.Protocol.PeerSharing.Test as Cardano.Network.Protocol.PeerSharing.Test,
    Ouroboros.Network.Protocol.TxSubmission2.Codec.CDDL as Cardano.Network.Protocol.TxSubmission2.Codec.CDDL,
    Ouroboros.Network.Protocol.TxSubmission2.Direct as Cardano.Network.Protocol.TxSubmission2.Direct,
    Ouroboros.Network.Protocol.TxSubmission2.Examples as Cardano.Network.Protocol.TxSubmission2.Examples,
    Ouroboros.Network.Protocol.TxSubmission2.Test as Cardano.Network.Protocol.TxSubmission2.Test,

  build-depends:
    QuickCheck,
    base >=4.14 && <4.22,
    bytestring,
    cardano-diffusion:api,
    cborg,
    containers,
    contra-tracer,
    io-classes,
    io-sim,
    ouroboros-network:{api, framework, protocols-tests-lib},
    tasty,
    tasty-quickcheck,
    text,
    typed-protocols,

test-suite protocols-tests
  import: ghc-options
  type: exitcode-stdio-1.0
  hs-source-dirs: protocols/tests
  main-is: Main.hs
  build-depends:
    base >=4.14 && <4.22,
    cardano-diffusion:protocols-tests-lib,
    tasty,

  ghc-options:
    -threaded
    -Wall
    -Wunused-packages
    -rtsopts

test-suite protocols-cddl
  import: ghc-options
  type: exitcode-stdio-1.0
  hs-source-dirs: protocols/cddl
  main-is: Main.hs

  if flag(cddl)
    buildable: True
  else
    buildable: False

  build-depends:
    QuickCheck,
    base >=4.14 && <4.22,
    bytestring,
    cardano-diffusion:{api, protocols, protocols-tests-lib},
    cborg,
    containers,
    directory,
    filepath,
    mtl,
    network,
    ouroboros-network:{api, api-tests-lib, protocols-tests-lib},
    process-extras,
    quickcheck-instances,
    serialise,
    tasty,
    tasty-hunit,
    tasty-quickcheck,
    temporary,
    text,
    typed-protocols:{typed-protocols, stateful},

  ghc-options:
    -threaded
    -Wall
    -rtsopts
    -with-rtsopts=-M400m

test-suite protocols-bench
  import: ghc-options-tests
  type: exitcode-stdio-1.0
  default-extensions: ImportQualifiedPost
  hs-source-dirs: protocols/bench
  main-is: Main.hs
  build-depends:
    base >=4.14 && <4.22,
    bytestring,
    cardano-diffusion:{api, protocols, protocols-tests-lib},
    cborg,
    containers,
    deepseq,
    network,
    ouroboros-network:{api, protocols-tests-lib},
    tasty-bench,
    typed-protocols:{typed-protocols, stateful},

  ghc-options:
    -rtsopts
    -with-rtsopts=-A32m
    -with-rtsopts=-T

  -- Important for comparing benchmarks results against a baseline run.
  -- Read: https://hackage.haskell.org/package/tasty-bench for details
  if impl(ghc >=8.6)
    ghc-options: -fproc-alignment=64

library cardano-diffusion-tests-lib
  import: ghc-options-tests
  visibility: public
  hs-source-dirs: tests/lib
  build-depends:
    QuickCheck >=2.16,
    aeson,
    base >=4.14 && <4.22,
    bytestring,
    cardano-diffusion:{cardano-diffusion, api, orphan-instances, protocols-tests-lib},
    cardano-slotting,
    cborg,
    containers,
    contra-tracer,
    dns,
    io-classes:{io-classes, si-timers, strict-stm},
    io-sim,
    iproute,
    monoidal-synchronisation,
    network,
    network-mux,
    ouroboros-network:{ouroboros-network, api, api-tests-lib, framework, framework-tests-lib, orphan-instances, ouroboros-network-tests-lib, protocols, protocols-tests-lib, tests-lib},
    pipes,
    pretty-simple,
    psqueues,
    random,
    serialise,
    tasty,
    tasty-quickcheck,
    time,
    typed-protocols:{typed-protocols, examples},

  exposed-modules:
    Test.Cardano.Network.Diffusion.Policies
    Test.Cardano.Network.Diffusion.Testnet
    Test.Cardano.Network.Diffusion.Testnet.MiniProtocols
    Test.Cardano.Network.Diffusion.Testnet.Simulation
    Test.Cardano.Network.OrphanInstances.Tests
    Test.Cardano.Network.PeerSelection
    Test.Cardano.Network.PeerSelection.Gource
    Test.Cardano.Network.PeerSelection.Instances
    Test.Cardano.Network.PeerSelection.LocalRootPeers
    Test.Cardano.Network.PeerSelection.MockEnvironment
    Test.Cardano.Network.PeerSelection.PublicRootPeers
    Test.Cardano.Network.PeerSelection.Utils

-- Simulation tests, and IO tests which don't require native system calls.
-- (i.e. they don't require system call API provided by `Win32-network` or
-- `network` dependency).  test-suite sim-tests
test-suite cardano-diffusion-sim-tests
  import: ghc-options-tests
  type: exitcode-stdio-1.0
  hs-source-dirs: tests/sim
  main-is: Main.hs
  build-depends:
    base >=4.14 && <4.22,
    cardano-diffusion:cardano-diffusion-tests-lib,
    tasty,
    with-utf8,

  ghc-options:
    -fno-ignore-asserts
    -threaded
    -rtsopts
    +RTS
    -T
    -RTS

library subscription
  import: ghc-options
  visibility: public
  hs-source-dirs: subscription
  exposed-modules: Cardano.Client.Subscription
  default-language: Haskell2010
  default-extensions: ImportQualifiedPost
  build-depends:
    base >=4.14 && <4.22,
    bytestring >=0.10 && <0.13,
    cardano-diffusion ^>=0.1,
    cborg >=0.2.8 && <0.3,
    containers >=0.5 && <0.9,
    contra-tracer >=0.1 && <0.3,
    io-classes:si-timers ^>=1.8.0.1,
    network-mux ^>=0.9,
    ouroboros-network:{api, framework} ^>=0.23,

library ping
  import: ghc-options
  visibility: public
  hs-source-dirs: ping
  exposed-modules: Cardano.Network.Ping
  build-depends:
    aeson >=2.1.1.0 && <3,
    base >=4.14 && <4.22,
    bytestring >=0.10 && <0.13,
    cborg >=0.2.8 && <0.3,
    contra-tracer >=0.1 && <0.3,
    io-classes:{si-timers, strict-stm} ^>=1.8.0.1,
    iproute ^>=1.7.15,
    network ^>=3.2.7,
    network-mux ^>=0.9,
    tdigest ^>=0.3,
    text >=1.2.4 && <2.2,
    time >=1.9.1 && <1.14,
    transformers >=0.5 && <0.7,
