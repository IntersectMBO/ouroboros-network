;
; NodeToNode Handshake (>=v14)
;
handshakeMessage
    = msgProposeVersions
    / msgAcceptVersion
    / msgRefuse
    / msgQueryReply

msgProposeVersions = [0, versionTable]
msgAcceptVersion   = [1, versionNumber_v14, v14.nodeToNodeVersionData]
msgRefuse          = [2, refuseReason]
msgQueryReply      = [3, versionTable]

; The codec only accepts definite-length maps.
versionTable = { * versionNumber_v14 => v14.nodeToNodeVersionData }

versionNumber_v14 = 14 / 15 / 16

; All version numbers
versionNumbers = versionNumber_v14

refuseReason
    = refuseReasonVersionMismatch
    / refuseReasonHandshakeDecodeError
    / refuseReasonRefused

refuseReasonVersionMismatch      = [0, [ *versionNumbers ] ]
refuseReasonHandshakeDecodeError = [1, versionNumbers, tstr]
refuseReasonRefused              = [2, versionNumbers, tstr]

;# import node-to-node-version-data-v14 as v14
;# import network.base as base
